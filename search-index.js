var searchIndex = JSON.parse('{\
"vst":{"doc":"A rust implementation of the VST2.4 API.","t":[0,0,0,0,0,0,0,14,0,18,3,18,18,18,18,18,18,18,18,18,3,3,13,13,13,13,13,13,13,13,13,13,13,13,6,13,13,3,4,3,3,4,4,3,13,13,6,18,6,4,18,13,13,13,13,13,13,3,3,3,13,13,13,13,13,13,13,13,13,13,13,18,18,13,13,18,18,3,6,13,4,6,6,18,13,13,18,18,18,18,13,13,6,13,13,13,13,13,13,13,13,13,13,13,13,4,13,4,13,13,13,13,13,4,13,13,13,13,3,18,18,18,18,18,18,3,3,13,13,18,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,12,12,12,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,12,12,12,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,17,17,17,17,17,17,17,3,3,3,3,3,3,6,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,4,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,4,4,13,4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,12,11,11,12,10,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,13,13,13,13,3,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,4,4,13,13,3,3,13,13,13,13,13,13,13,8,8,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,12,12,12,10,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["api","buffer","channels","editor","event","host","plugin","plugin_main","util","ACTIVE","AEffect","ALT","AUTOMATION_READING","AUTOMATION_WRITING","BARS_VALID","CAN_DOUBLE_REPLACING","CAN_REPLACING","COMMAND","CONTROL","CYCLE_POS_VALID","ChannelFlags","ChannelProperties","Cinema30","Cinema31","Cinema40","Cinema41","Cinema60","Cinema61","Cinema70","Cinema71","Cinema80","Cinema81","Custom","Custom","DispatcherProc","Empty","English","Event","EventType","Events","FileSelect","FileSelectCommand","FileSelectType","FileType","French","German","GetParameterProc","HAS_EDITOR","HostCallbackProc","HostLanguage","IS_SYNTH","Italian","Japanese","Load","LoadMultipleFiles","Maybe","Midi","MidiEvent","MidiEventFlags","ModifierKey","Mono","Music30","Music31","Music40","Music41","Music60","Music61","Music70","Music71","Music80","Music81","NANOSECONDS_VALID","NO_SOUND_IN_STOP","No","Offline","PPQ_POS_VALID","PROGRAM_CHUNKS","PluginFlags","PluginMain","Prefetch","ProcessLevel","ProcessProc","ProcessProcF64","REALTIME_EVENT","Realtime","Regular","SHIFT","SMPTE_VALID","SPEAKER","STEREO","Save","SelectDirectory","SetParameterProc","Smpte239fps","Smpte249fps","Smpte24fps","Smpte25fps","Smpte2997dfps","Smpte2997fps","Smpte30dfps","Smpte30fps","Smpte599fps","Smpte60fps","SmpteFilm16mm","SmpteFilm35mm","SmpteFrameRate","Spanish","SpeakerArrangementType","Stereo","StereoCLfe","StereoCenter","StereoSide","StereoSurround","Supported","Surround102","Surround50","Surround51","SysEx","SysExEvent","TEMPO_VALID","TIME_SIG_VALID","TRANSPORT_CHANGED","TRANSPORT_CYCLE_ACTIVE","TRANSPORT_PLAYING","TRANSPORT_RECORDING","TimeInfo","TimeInfoFlags","Unknown","User","VST_CLOCK_VALID","Yes","_Audio","_Parameter","_Placeholder","_Trigger","_Video","_flags","_flags","_ioRatio","_midi_reserved","_offQualities","_process","_realQualities","_reserved","_reserved","_reserved1","_reserved1","_reserved2","_reserved2","all","all","all","all","all","arrangement_type","bar_start_pos","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bitor_assign","bits","bits","bits","bits","bits","bitxor","bitxor","bitxor","bitxor","bitxor","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byte_size","byte_size","byte_size","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","command","consts","contains","contains","contains","contains","contains","cycle_end_pos","cycle_start_pos","data_size","default","default","delta_frames","delta_frames","delta_frames","detune","dispatcher","drop_plugin","empty","empty","empty","empty","empty","eq","eq","eq","eq","eq","eq","event_type","event_type","event_type","events","events","extend","extend","extend","extend","extend","file_types","flags","flags","flags","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","from_iter","from_iter","from_iter","future","future","future","getParameter","get_editor","get_info","get_params","get_plugin","hash","hash","hash","hash","hash","initialDelay","initial_path","insert","insert","insert","insert","insert","intersects","intersects","intersects","intersects","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_all","is_all","is_all","is_all","is_empty","is_empty","is_empty","is_empty","is_empty","mac_creator","magic","midi_data","mime_type_1","mime_type_2","name","name","nanoseconds","ne","ne","ne","ne","ne","ne","nix_type","not","not","not","not","not","note_length","note_off_velocity","note_offset","numInputs","numOutputs","numParams","numPrograms","num_events","num_paths","num_types","object","osx_type","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","ppq_pos","processReplacing","processReplacingF64","remove","remove","remove","remove","remove","reserved","reserved1","reserved2","return_multiple_paths","return_path","sample_pos","sample_rate","samples_to_next_clock","select_type","set","set","set","set","set","setParameter","short_name","size_return_path","smpte_frame_rate","smpte_offset","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","system_data","tempo","time_sig_denominator","time_sig_numerator","title","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","toggle","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uniqueId","user","version","win_type","MAX_LABEL","MAX_PARAM_STR_LEN","MAX_PRESET_NAME_LEN","MAX_PRODUCT_STR_LEN","MAX_SHORT_LABEL","MAX_VENDOR_STR_LEN","VST_MAGIC","AudioBuffer","AudioBufferIterator","InputIterator","Inputs","OutputIterator","Outputs","PlaceholderEvent","SendEventBuffer","WriteIntoPlaceholder","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone_into","default","events","from","from","from","from","from","from","from","from_raw","get","get","get_mut","index","index","index_mut","input_count","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","is_empty","is_empty","len","len","new","next","next","next","output_count","samples","send_events","split","split_at","split_at_mut","store_events","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","write_into","zip","ArrangementTarget","C_Lfe","ChannelInfo","Cinema","Custom","Empty","L_R","Lc_Rc","Left","Ls_Rs","Mono","Music","Right","S10_2","S3_0","S3_1","S4_0","S4_1","S5_0","S5_1","S6_0","S6_1","S7_0","S7_1","S8_0","S8_1","Sl_Sr","SpeakerArrangementType","Stereo","StereoChannel","StereoConfig","Surround","SurroundConfig","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","default","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","is_left_stereo","is_speaker_type","new","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Add","Alt","Back","Circular","CircularRelative","Clear","Control","Decimal","Delete","Divide","Down","Editor","End","Enter","Equals","Escape","F1","F10","F11","F12","F2","F3","F4","F5","F6","F7","F8","F9","Help","Home","Insert","Key","KeyCode","KnobMode","Left","Linear","Multiply","Next","None","Numlock","Numpad0","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","PageDown","PageUp","Pause","Print","Return","Right","Scroll","Select","Separator","Shift","Snapshot","Space","Subtract","Tab","Up","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","character","clone","clone","clone","clone_into","clone_into","clone_into","close","fmt","fmt","fmt","from","from","from","idle","into","into","into","is_open","key","key_down","key_up","modifier","open","position","set_knob_mode","size","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from_primitive","try_from_primitive","try_into","try_into","try_into","type_id","type_id","type_id","Deprecated","Event","Midi","MidiEvent","SysEx","SysExEvent","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","data","delta_frames","delta_frames","detune","from","from","from","from","into","into","into","live","note_length","note_off_velocity","note_offset","payload","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","write_into","write_into","write_into","Host","HostBuffer","InstanceFailed","InvalidApiVersion","InvalidPath","NotAPlugin","PluginInstance","PluginLoadError","PluginLoader","automate","begin_edit","bind","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_do","drop","end_edit","fmt","fmt","from","from","from","from","from_info","get_block_size","get_editor","get_info","get_info","get_input_info","get_output_info","get_parameter_object","get_plugin_id","get_tail_size","get_time_info","idle","init","input_count","instance","into","into","into","into","load","new","new","output_count","process","process_events","process_events","process_f64","resume","set_block_size","set_sample_rate","suspend","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update_display","vendor_specific","Analysis","Bypass","CanDo","Category","Effect","Generator","HostCallback","Info","Mastering","MidiKeyBasedInstrumentControl","MidiProgramNames","MidiSingleNoteTuningChange","Offline","OfflineProcess","Other","Plugin","PluginParameters","ReceiveEvents","ReceiveMidiEvent","ReceiveSysExEvent","ReceiveTimeInfo","Restoration","RoomFx","SendEvents","SendMidiEvent","Shell","Spacializer","SurroundFx","Synth","Unknown","automate","begin_edit","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","can_be_automated","can_do","category","change_preset","clone","clone","clone","clone_into","clone_into","clone_into","default","default","end_edit","f64_precision","fmt","fmt","fmt","from","from","from","from","from_str","get_bank_data","get_block_size","get_editor","get_info","get_info","get_input_info","get_output_info","get_parameter","get_parameter_label","get_parameter_name","get_parameter_object","get_parameter_text","get_plugin_id","get_preset_data","get_preset_name","get_preset_num","get_tail_size","get_time_info","idle","init","initial_delay","inputs","into","into","into","into","into","load_bank_data","load_preset_data","midi_inputs","midi_outputs","name","new","outputs","parameters","preset_chunks","presets","process","process_events","process_events","process_f64","raw_callback","raw_effect","resume","set_block_size","set_parameter","set_preset_name","set_sample_rate","silent_when_stopped","start_process","stop_process","string_to_parameter","suspend","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from_primitive","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique_id","update_display","vendor","vendor_specific","version","vst_version","AtomicFloat","ParameterTransfer","ParameterTransferIterator","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","default","fmt","fmt","from","from","from","from","get","get_parameter","into","into","into","into_iter","iterate","new","new","next","set","set_parameter","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":["vst","","","","","","","","","vst::apivst::api::consts","","","","","","","vst::buffer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vst::channels","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vst::editor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vst::event","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vst::host","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vst::plugin","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","vst::util","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Structures and types for interfacing with the VST 2.4 API.","Buffers to safely work with audio samples.","Meta data for dealing with input / output channels. Not …","All VST plugin editor related functionality.","Interfaces to VST events.","Host specific structures.","Plugin specific structures.","Exports the necessary symbols for the plugin to be used …","Structures for easing the implementation of VST plugins.","Indicates channel is active. Ignored by host.","Used with the VST API to pass around plugin information.","Alt key.","Set if automation read mode active (play parameter …","Set if automation write mode active (record parameter …","Set if TimeInfo::bar_start_pos is valid.","Supports 64 bit audio processing.","Plugin can process 32 bit audio. (Mandatory in VST 2.4).","Control on mac.","Command on mac, ctrl on other.","Set if both TimeInfo::cycle_start_pos and …","Flags for VST channels.","Information about a channel. Only some hosts use this …","L R C","L R C Lfe","L R C S (LCRS)","L R C Lfe S (LCRS + Lfe)","L R C Ls  Rs Cs","L R C Lfe Ls Rs Cs","L R C Ls Rs Lc Rc","L R C Lfe Ls Rs Lc Rc","L R C Ls Rs Lc Rc Cs","L R C Lfe Ls Rs Lc Rc Cs","User defined arrangement.","","Dispatcher function used to process opcodes. Called by …","Empty arrangement.","","A VST event intended to be casted to a corresponding type.","The type of event that has occured. See …","A struct which contains events.","File selector descriptor used in …","The file operation to perform.","Format to select files.","File type descriptor.","","","Callback function used to get parameter values. Called by …","Plugin has an editor.","Host callback function passed to plugin. Can be used to …","Language that the host is using.","Plugin is a synth.","","","Load a file.","Load multiple files simultaneously.","","Midi event. See <code>api::MidiEvent</code>.","A midi event.","MIDI event flags.","Cross platform modifier key flags.","Mono.","L R S","L R Lfe S","L R Ls Rs (Quadro)","L R Lfe Ls Rs (Quadro + Lfe)","L R Ls Rs  Sl Sr","L R Lfe Ls Rs Sl Sr","L R C Ls Rs Sl Sr","L R C Lfe Ls Rs Sl Sr","L R C Ls Rs Cs Sl Sr","L R C Lfe Ls Rs Cs Sl Sr","Set if TimeInfo::nanoseconds is valid.","Plugin does not produce sound when all input is silence.","","Offline processing thread (therefore GUI/user thread).","Set if TimeInfo::ppq_pos is valid.","Plugin preset data is handled in formatless chunks.","Flags for VST plugins.","<code>VSTPluginMain</code> function signature.","Sequence thread (MIDI, etc).","Denotes in which thread the host is in.","Process function used to process 32 bit floating point …","Process function used to process 64 bit floating point …","This event is played live (not in playback from a …","Audio process thread.","Regular file selector.","Shift key.","Set if both TimeInfo::smpte_offset and …","Use channel’s specified speaker_arrangement instead of …","Indicates channel is first of stereo pair.","Save a file.","Choose a directory.","Callback function used to set parameter values. Called by …","HDTV: 23.976 fps","HDTV: 24.976 fps","24 fps","25 fps","29.97 drop","29.97 fps","30 drop","30 fps","HDTV: 59.94 fps","HDTV: 60 fps","Film 16mm","Film 35mm","SMPTE Frame Rates.","","Tells the host how the channels are intended to be used …","L R","C Lfe","Lc Rc","Sl Sr","Ls Rs","Used to specify whether functionality is supported.","L R C Lfe Ls Rs Tfl Tfc Tfr Trl Trr Lfe2","L R C Ls Rs","L R C Lfe Ls Rs","System exclusive event. See <code>api::SysExEvent</code>.","A midi system exclusive event.","Set if TimeInfo::tempo is valid.","Set if both TimeInfo::time_sig_numerator and …","Indicates that play, cycle or record state has changed.","Set if Host sequencer is in cycle mode.","Set if Host sequencer is currently playing.","Set if Host sequencer is in record mode.","Describes the time at the start of the block currently …","Used in the <code>flags</code> field of <code>TimeInfo</code>, and for querying the …","Unsupported by host.","GUI thread.","Set if TimeInfo::samples_to_next_clock is valid.","","Deprecated.","Deprecated.","Value used for uninitialized placeholder events.","Deprecated.","Deprecated.","Generic flags, none defined in VST api yet.","Generic flags, none defined in VST api yet.","Deprecated unused member.","Reserved midi byte (0).","Deprecated unused member.","Accumulating process mode is deprecated in VST 2.4! Use …","Deprecated unused member.","Reserved for future use. Should be 0.","The <code>Event</code> type is cast appropriately, so this acts as …","Reserved for future use. Should be 0.","Reserved for future use. Should be 0.","Reserved for future use. Should be 0.","Reserved for future use. Should be 0.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Returns the set containing all flags.","Type of speaker arrangement this channel is a part of.","last Bar Start Position, in Quarter Note","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Size of this structure; <code>mem::sizeof::<MidiEvent>()</code>.","Size of this structure; <code>mem::sizeof::<Event>()</code>.","Size of this structure; <code>mem::sizeof::<SysExEvent>()</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","The type of file selection to perform.","Constant values","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Returns <code>true</code> all of the flags in <code>other</code> are contained …","Cycle End (right locator), in Quarter Note","Cycle Start (left locator), in Quarter Note","Size of payload in bytes.","","","Number of samples into the current processing block that …","Number of samples into the current processing block that …","Number of samples into the current processing block that …","Detuning between -63 and +64 cents, for scales other than …","Host to plug-in dispatcher.","Drop the Plugin object. Only works for plugins created …","Returns an empty set of flags","Returns an empty set of flags","Returns an empty set of flags","Returns an empty set of flags","Returns an empty set of flags","","","","","","","Should be <code>EventType::Midi</code>.","The type of event. This lets you know which event this …","Should be <code>EventType::SysEx</code>.","Use this in your impl of process_events() to process the …","Variable-length array of pointers to <code>api::Event</code> objects.","","","","","","List of file types to show.","Bitmask made of values from <code>api::PluginFlags</code>.","Flags found in <code>ChannelFlags</code>.","See <code>MidiEventFlags</code>.","See <code>TimeInfoFlags</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create a <code>Supported</code> value from an integer if possible.","","","","","","","","","","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","Convert from underlying bit representation, preserving all…","","","","","","Reserved for future use (please zero).","Reserved for future use.","Reserved for future use.","Get value of automatable parameter.","Return handle to Editor object. Only works for plugins …","Return handle to Info object. Only works for plugins …","Return handle to PluginParameters object. Only works for …","Return handle to Plugin object. Only works for plugins …","","","","","","For algorithms which need input in the first place (Group …","Initial path.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","","","","","","","","","","","","Convert to integer ordinal for interop with VST api.","","","","","","","","","","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","Unknown. 0 = no creator.","Magic number. Must be <code>[\'V\', \'S\', \'T\', \'P\']</code>.","1 to 3 midi bytes. TODO: Doc","MIME type.","Additional MIME type.","Channel name.","Display name of file type.","System Time in nanoseconds (10^-9 second)","","","","","","","Unix file type.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Length in sample frames of entire note if available, …","Note off velocity between 0 and 127.","Offset in samples into note from start if available, …","Number of audio inputs.","Number of audio outputs.","Number of parameters. All programs are assumed to have …","Number of programs (Presets).","Number of events.","Number of paths returned.","Number of file types.","Void pointer usable by api to store object data.","OS X file type.","","","","","","Musical Position, in Quarter Note (1.0 equals 1 Quarter …","Process audio samples in replacing mode.","Process double-precision audio samples in replacing mode.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Removes the specified flags in-place.","Reserved by host.","Reserved for host, must be 0.","Reserved for host, must be 0.","Used when operation returns multiple paths.","Used when operation returns a single path.","current Position in audio samples (always valid)","current Sample Rate in Hertz (always valid)","MIDI Clock Resolution (24 Per Quarter Note), can be …","The file selector to open.","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Set value of automatable parameter.","Name of channel (recommended: 6 characters + delimiter).","Size of the path buffer in bytes.","See <code>SmpteFrameRate</code>","SMPTE offset in SMPTE subframes (bits; 1/80 of a frame). …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Pointer to payload.","current Tempo in BPM (Beats Per Minute)","Time Signature Denominator (e.g. 4 for 3/4)","Time Signature Numerator (e.g. 3 for 3/4)","File selector’s title.","","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Registered unique identifier (register it at Steinberg …","User defined pointer.","Plug-in version (e.g. 1100 for v1.1.0.0).","Windows file type.","","","","","","","VST plugins are identified by a magic number. This …","<code>AudioBuffer</code> contains references to the audio buffers for …","Iterator over pairs of buffers of input channels and …","Iterator over buffers for input channels of an <code>AudioBuffer</code>…","Wrapper type to access the buffers for the input channels …","Iterator over buffers for output channels of an …","Wrapper type to access the buffers for the output …","This is used as a placeholder to pre-allocate space for a …","This buffer is used for sending midi events through the …","This trait is used by <code>SendEventBuffer::send_events</code> to …","","","","","","","","","","","","","","","Clears the buffer","","","","Returns a reference to the stored events","","","","","","","","Create an <code>AudioBuffer</code> from raw pointers. Only really …","Access channel at the given index","Access channel at the given index","Mutably access channel at the given index","","","","The number of input channels that this buffer was created …","","","","","","","","","","","","Returns true if the buffer is empty","Returns true if the buffer is empty","Number of channels","Number of channels","Creates a buffer for sending up to the given number of …","","","","The number of output channels that this buffer was …","The number of samples in this buffer (same for all …","Sends events to the host. See the <code>fwd_midi</code> example.","Split this buffer into separate inputs and outputs.","Split borrowing at the given index, like for slices","Split borrowing at the given index, like for slices","Stores events in the buffer, replacing the buffer’s …","","","","","","","","","","","","","","","","","","","","","","","writes an event into the given placeholder memory location","Create an iterator over pairs of input buffers and output …","Target for Speaker arrangement type. Can be a cinema …","Center, low frequency effects.","Information about an input / output channel. This isn’t …","Cinematic arrangement. Technically identical to Music.","Custom arrangement not specified to host.","Empty arrangement.","Regular.","Left center, right center.","Left channel.","Left surround, right surround.","Mono channel.","Music arrangement. Technically identical to Cinema.","Right channel.","10.2 surround sound. Cinema + Music: L R C Lfe Ls Rs Tfl …","3.0 surround sound. Cinema: L R C Music: L R S","3.1 surround sound. Cinema: L R C Lfe Music: L R Lfe S","4.0 surround sound. Cinema: L R C S (LCRS) Music: L R Ls …","4.1 surround sound. Cinema: L R C Lfe S (LCRS + Lfe) …","5.0 surround sound. Cinema and music: L R C Ls Rs","5.1 surround sound. Cinema and music: L R C Lfe Ls Rs","6.0 surround sound. Cinema: L R C Ls Rs Cs Music: L R Ls …","6.1 surround sound. Cinema: L R C Lfe Ls Rs Cs Music: L R …","7.0 surround sound. Cinema: L R C Ls Rs Lc Rc Music: L R …","7.1 surround sound. Cinema: L R C Lfe Ls Rs Lc Rc Music: …","8.0 surround sound. Cinema: L R C Ls Rs Lc Rc Cs Music: L …","8.1 surround sound. Cinema: L R C Lfe Ls Rs Lc Rc Cs …","Side left, side right.","Type representing how a channel is used. Only useful for …","Stereo channel. Contains type of stereo arrangement and …","An enum for all channels in a stereo configuration.","Possible stereo speaker configurations.","Surround channel. Contains surround arrangement and …","Possible surround speaker configurations.","","","","","","","","","","","","","","","","","","","","","","","Convert to the VST api equivalent of this structure.","","","","","Convert to VST API arrangement type.","","Determine whether this channel is the left speaker in a …","Determine whether this channel is part of a surround …","Construct a new <code>ChannelInfo</code> object.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Implemented by plugin editors.","","","","","","","","","","","","","","","","","","","","Platform independent key codes.","A platform independent key code. Includes modifier keys.","Allows host to set how a parameter knob works.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ASCII character for key pressed (if applicable).","","","","","","","Called when the editor window is closed.","","","","","","","Editor idle call. Called by host.","","","","Return whether the window is currently open.","Key pressed. See <code>enums::Key</code>.","Receive key down event. Return <code>true</code> if the key was used.","Receive key up event. Return <code>true</code> if the key was used.","Modifier key bitflags. See <code>enums::flags::modifier_key</code>.","Called when the editor window is opened.","Get the coordinates of the editor window.","Set the knob mode for this editor (if supported by host).","Get the size of the editor window.","","","","","","","","","","","","","","","","","A deprecated event.","A VST event.","A midi event.","A midi event.","A system exclusive event.","A system exclusive event.","","","","","","","","","","","","","The raw midi data associated with this event.","Number of samples into the current processing block that …","Number of samples into the current processing block that …","Detuning between -63 and +64 cents.","","","","","","","","This midi event was created live as opposed to being …","The length of the midi note associated with this event, …","Note off velocity between 0 and 127.","Offset in samples into note from note start, if available.","The SysEx payload.","","","","","","","","","","","","","","","","Implemented by all VST hosts.","Used for constructing <code>AudioBuffer</code> instances on the host.","Failed to create an instance of this plugin.","The API version which the plugin used is not supported by …","Could not load given path.","Given path is not a VST plugin.","An instance of an externally loaded VST plugin.","All possible errors that can occur when loading a VST …","Wrapper for an externally loaded VST plugin.","Automate a parameter; the value has been changed.","Signal that automation of a parameter started (the knob …","Bind sample arrays to the <code>HostBuffer</code> to create an …","","","","","","","","","","","Signal that automation of a parameter ended (the knob is …","","","","","","","Create a <code>HostBuffer</code> for the number of input and output …","Get block size.","","Get vendor and product information.","","","","","Get the plugin ID of the currently loading plugin.","","Get time information.","An idle call.","","Number of input channels supported by this <code>HostBuffer</code>.","Try to create an instance of this VST plugin.","","","","","Load a plugin at the given path with the given host.","","Create a <code>HostBuffer</code> for a given number of input and …","Number of output channels supported by this <code>HostBuffer</code>.","","Handle incoming events from the plugin.","","","","","","","","","","","","","","","","","","","","Refresh UI after the plugin’s parameters changed.","","Scope, tuner, spectrum analyser, etc.","","Features which are optionally supported by a plugin. …","Plugin type. Generally either Effect or Synth.","Any effect","Tone generator, etc.","A reference to the host which allows the plugin to call …","A structure representing static plugin information.","Dynamics, etc.","","","","","Offline processing.","","Must be implemented by all VST plugins.","Parameter object shared between the UI and processing …","","","","","Denoiser, etc.","Delays and Reverbs","","","Contains other plugins.","Panners, etc.","Dedicated surround processor.","VST instrument","Unknown / not implemented","Signal the host that the value for the parameter has …","Signal the host the start of a parameter change a gesture …","","","","","","","","","Return whether parameter at <code>index</code> can be automated.","Return whether plugin supports specified action.","Plugin category. Possible values are found in …","Set the current preset to the index specified by <code>preset</code>.","","","","","","","","","Signal the host the end of a parameter change gesture …","Indicates whether this plugin can process f64 based …","","","","","","","","Converts a string to a <code>CanDo</code> instance. Any given string …","If <code>preset_chunks</code> is set to true in plugin info, this …","Get block size.","Return handle to plugin editor if supported. The method …","This method must return an <code>Info</code> struct.","","Get information about an input channel. Only used by some …","Get information about an output channel. Only used by …","Get the value of paramater at <code>index</code>. Should be value …","Get parameter label for parameter at <code>index</code> (e.g. “db”…","Get the name of parameter at <code>index</code>.","Get a reference to the shared parameter object.","Get the parameter value for parameter at <code>index</code> (e.g. “…","","If <code>preset_chunks</code> is set to true in plugin info, this …","Get the name of the preset at the index specified by …","Get the current preset index.","Get the tail size of plugin when it is stopped. Used in …","Request time information from Host.","","Called when plugin is fully initialized.","Latency of the plugin in samples.","Number of inputs.","","","","","","If <code>preset_chunks</code> is set to true in plugin info, this …","If <code>preset_chunks</code> is set to true in plugin info, this …","Number of MIDI input channels (1-16), or 0 for the …","Number of MIDI output channels (1-16), or 0 for the …","Plugin Name.","Called during initialization to pass a <code>HostCallback</code> to …","Number of outputs.","Number of parameters.","Indicates that preset data is handled in formatless …","Number of different presets.","Process an audio buffer containing <code>f32</code> values.","Handle incoming events sent from the host.","Send events to the host.","Process an audio buffer containing <code>f64</code> values.","Get the callback for calling host-specific extensions","Get the effect pointer for calling host-specific …","Called to transition the plugin into the <em>resumed</em> state.","Called when block size is changed by host.","Set the value of parameter at <code>index</code>. <code>value</code> is between 0.0 …","Set the current preset name.","Called when sample rate is changed by host.","If this is true, the plugin will not produce sound when …","Called one time before the start of process call.","Called after the stop of process call.","Use String as input for parameter value. Used by host to …","Called to transition the plugin into the <em>suspended</em> state.","","","","","","","","","","","","","","","","","","Unique plugin ID. Can be registered with Steinberg to …","Refresh UI after the plugin’s parameters changed.","Plugin Vendor.","Vendor specific handling.","Plugin version (e.g. 0001 = <code>v0.0.0.1</code>, 1283 = <code>v1.2.8.3</code>).","Get the VST API version supported by the host e.g. …","Simple atomic floating point variable with relaxed …","A set of parameters that can be shared between threads.","An iterator over changed parameters. Returned by <code>iterate</code>.","","","","","","","","","","","","","","","Get the current value of the atomic float.","Get the current value of the parameter with index <code>index</code>.","","","","","Iterate over all parameters marked as changed. If <code>acquire</code> …","New atomic float with initial value <code>value</code>.","Create a new parameter set with <code>parameter_count</code> …","","Set the value of the atomic float to <code>value</code>.","Set the value of the parameter with index <code>index</code> to <code>value</code> …","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,1,0,2,3,3,3,4,4,2,2,3,0,0,5,5,5,5,5,5,5,5,5,5,5,6,0,5,7,0,0,0,0,0,0,0,7,7,0,4,0,0,4,7,7,8,8,6,9,0,0,0,5,5,5,5,5,5,5,5,5,5,5,3,4,6,10,3,4,0,0,10,0,0,0,11,10,12,2,3,1,1,8,8,0,13,13,13,13,13,13,13,13,13,13,13,13,0,7,0,5,5,5,5,5,0,5,5,5,9,0,3,3,3,3,3,3,0,0,10,10,3,6,9,9,9,9,9,14,15,16,17,16,16,16,18,14,17,15,17,15,1,4,2,11,3,19,20,1,4,2,11,3,1,4,2,11,3,1,4,2,11,3,1,4,2,11,3,1,4,2,11,3,1,4,2,11,3,1,4,2,11,3,16,19,10,7,8,12,21,22,18,17,5,6,9,14,15,20,13,1,4,2,11,3,16,19,10,7,8,12,21,22,18,17,5,6,9,14,15,20,13,1,4,2,11,3,17,14,15,5,9,14,15,20,13,1,4,2,11,3,5,9,14,15,20,13,1,4,2,11,3,1,4,2,11,3,22,0,1,4,2,11,3,20,20,15,20,13,17,14,15,17,16,16,1,4,2,11,3,6,1,4,2,11,3,17,14,15,18,18,1,4,2,11,3,22,16,19,17,20,9,13,1,1,1,1,1,4,4,4,4,4,2,2,2,2,2,11,11,11,11,11,3,3,3,3,3,16,19,10,7,8,12,21,22,18,17,5,6,6,9,14,15,20,13,1,4,2,11,3,1,4,2,11,3,1,4,2,11,3,1,4,2,11,3,1,4,2,11,3,16,19,22,16,16,16,16,16,1,4,2,11,3,16,22,1,4,2,11,3,1,4,2,11,3,16,19,10,7,8,12,21,22,18,17,5,6,6,9,14,15,20,13,1,4,2,11,3,1,4,2,11,3,1,4,2,11,3,22,16,17,21,21,19,21,20,6,1,4,2,11,3,21,1,4,2,11,3,17,17,17,16,16,16,16,18,22,22,16,21,1,4,2,11,3,20,16,16,1,4,2,11,3,22,16,16,22,22,20,20,20,22,1,4,2,11,3,16,19,22,20,20,1,4,2,11,3,1,4,2,11,3,15,20,20,20,22,5,9,14,15,20,13,1,4,2,11,3,1,4,2,11,3,16,19,10,7,8,12,21,22,18,17,5,6,9,14,15,20,13,1,4,2,11,3,16,19,10,7,8,12,21,22,18,17,5,6,9,14,15,20,13,1,4,2,11,3,16,19,10,7,8,12,21,22,18,17,5,6,9,14,15,20,13,1,4,2,11,3,16,16,16,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,24,25,26,27,28,29,23,24,25,26,27,28,29,28,29,29,28,28,23,24,25,26,27,28,29,23,26,29,26,26,29,26,23,23,24,25,26,27,28,29,24,25,27,29,26,29,26,29,28,24,25,27,23,23,28,23,29,26,28,29,23,24,25,26,27,28,29,23,24,25,26,27,28,29,23,24,25,26,27,28,29,30,23,0,31,0,32,33,33,31,31,34,31,33,32,34,35,35,35,35,35,35,35,35,35,35,35,35,35,31,0,33,0,0,33,0,36,32,34,31,35,33,36,32,34,31,35,33,33,36,36,32,34,31,35,33,33,36,36,32,34,31,35,33,33,33,33,36,36,32,34,31,35,33,36,32,34,31,35,33,36,32,34,31,35,33,37,37,37,38,38,37,37,37,37,37,37,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,0,0,0,37,38,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,39,38,37,39,38,37,39,39,38,37,39,38,37,40,39,38,37,39,38,37,40,39,38,37,40,39,40,40,39,40,40,40,40,39,38,37,39,38,38,37,37,38,37,39,38,37,39,38,37,41,0,41,0,41,0,41,42,43,41,42,43,41,42,43,41,42,43,42,42,43,42,41,41,42,43,41,42,43,42,42,42,42,43,41,42,43,41,42,43,41,42,43,41,42,43,41,42,43,0,0,44,44,44,44,0,0,0,45,45,46,47,48,46,44,47,48,46,44,48,48,45,44,44,47,48,46,44,46,45,48,45,48,48,48,48,45,48,45,45,48,46,47,47,48,46,44,47,48,46,46,48,45,48,48,48,48,48,48,44,47,48,46,44,47,48,46,44,47,48,46,44,45,48,49,50,0,0,49,49,0,0,49,50,50,50,50,49,50,0,0,50,50,50,50,49,49,50,50,49,49,49,49,49,51,51,49,52,50,51,49,52,50,51,53,54,52,53,49,52,51,49,52,51,52,51,51,52,49,52,50,49,52,50,51,50,53,51,54,54,51,54,54,53,53,53,54,53,51,53,53,53,54,51,51,54,52,52,49,52,50,50,51,53,53,52,52,52,54,52,52,52,52,54,54,51,54,51,51,54,54,53,53,54,52,54,54,53,54,49,52,51,49,49,52,50,51,49,49,52,50,51,49,52,50,51,52,51,52,54,52,51,0,0,0,55,56,57,55,56,57,55,57,55,55,55,55,56,57,55,57,55,56,57,56,57,55,57,56,55,57,55,55,56,57,55,56,57,55,56,57],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["channelflags",3]],[[],["pluginflags",3]],[[],["modifierkey",3]],[[],["midieventflags",3]],[[],["timeinfoflags",3]],null,null,[[["channelflags",3]],["channelflags",3]],[[["pluginflags",3]],["pluginflags",3]],[[["modifierkey",3]],["modifierkey",3]],[[["midieventflags",3]],["midieventflags",3]],[[["timeinfoflags",3]],["timeinfoflags",3]],[[["channelflags",3]]],[[["pluginflags",3]]],[[["modifierkey",3]]],[[["midieventflags",3]]],[[["timeinfoflags",3]]],[[["channelflags",3]],["channelflags",3]],[[["pluginflags",3]],["pluginflags",3]],[[["modifierkey",3]],["modifierkey",3]],[[["midieventflags",3]],["midieventflags",3]],[[["timeinfoflags",3]],["timeinfoflags",3]],[[["channelflags",3]]],[[["pluginflags",3]]],[[["modifierkey",3]]],[[["midieventflags",3]]],[[["timeinfoflags",3]]],[[],["i32",15]],[[],["i32",15]],[[],["u8",15]],[[],["i32",15]],[[],["i32",15]],[[["channelflags",3]],["channelflags",3]],[[["pluginflags",3]],["pluginflags",3]],[[["modifierkey",3]],["modifierkey",3]],[[["midieventflags",3]],["midieventflags",3]],[[["timeinfoflags",3]],["timeinfoflags",3]],[[["channelflags",3]]],[[["pluginflags",3]]],[[["modifierkey",3]]],[[["midieventflags",3]]],[[["timeinfoflags",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[],["speakerarrangementtype",4]],[[],["eventtype",4]],[[],["event",3]],[[],["sysexevent",3]],[[],["timeinfo",3]],[[],["smpteframerate",4]],[[],["channelflags",3]],[[],["pluginflags",3]],[[],["modifierkey",3]],[[],["midieventflags",3]],[[],["timeinfoflags",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["channelflags",3]],["ordering",4]],[[["pluginflags",3]],["ordering",4]],[[["modifierkey",3]],["ordering",4]],[[["midieventflags",3]],["ordering",4]],[[["timeinfoflags",3]],["ordering",4]],null,null,[[["channelflags",3]],["bool",15]],[[["pluginflags",3]],["bool",15]],[[["modifierkey",3]],["bool",15]],[[["midieventflags",3]],["bool",15]],[[["timeinfoflags",3]],["bool",15]],null,null,null,[[],["timeinfo",3]],[[]],null,null,null,null,null,[[]],[[],["channelflags",3]],[[],["pluginflags",3]],[[],["modifierkey",3]],[[],["midieventflags",3]],[[],["timeinfoflags",3]],[[["supported",4]],["bool",15]],[[["channelflags",3]],["bool",15]],[[["pluginflags",3]],["bool",15]],[[["modifierkey",3]],["bool",15]],[[["midieventflags",3]],["bool",15]],[[["timeinfoflags",3]],["bool",15]],null,null,null,[[]],null,[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],[[["intoiterator",8]]],null,null,null,null,null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["isize",15]],[["option",4],["supported",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],[["option",4],["channelflags",3]]],[[["i32",15]],[["option",4],["pluginflags",3]]],[[["u8",15]],[["modifierkey",3],["option",4]]],[[["i32",15]],[["option",4],["midieventflags",3]]],[[["i32",15]],[["timeinfoflags",3],["option",4]]],[[["i32",15]],["channelflags",3]],[[["i32",15]],["pluginflags",3]],[[["u8",15]],["modifierkey",3]],[[["i32",15]],["midieventflags",3]],[[["i32",15]],["timeinfoflags",3]],[[["i32",15]],["channelflags",3]],[[["i32",15]],["pluginflags",3]],[[["u8",15]],["modifierkey",3]],[[["i32",15]],["midieventflags",3]],[[["i32",15]],["timeinfoflags",3]],[[["intoiterator",8]],["channelflags",3]],[[["intoiterator",8]],["pluginflags",3]],[[["intoiterator",8]],["modifierkey",3]],[[["intoiterator",8]],["midieventflags",3]],[[["intoiterator",8]],["timeinfoflags",3]],null,null,null,null,[[],["option",4]],[[],["info",3]],[[],["arc",3]],[[],["box",3]],[[]],[[]],[[]],[[]],[[]],null,null,[[["channelflags",3]]],[[["pluginflags",3]]],[[["modifierkey",3]]],[[["midieventflags",3]]],[[["timeinfoflags",3]]],[[["channelflags",3]],["bool",15]],[[["pluginflags",3]],["bool",15]],[[["modifierkey",3]],["bool",15]],[[["midieventflags",3]],["bool",15]],[[["timeinfoflags",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["isize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,null,null,null,null,null,null,null,[[["supported",4]],["bool",15]],[[["channelflags",3]],["bool",15]],[[["pluginflags",3]],["bool",15]],[[["modifierkey",3]],["bool",15]],[[["midieventflags",3]],["bool",15]],[[["timeinfoflags",3]],["bool",15]],null,[[],["channelflags",3]],[[],["pluginflags",3]],[[],["modifierkey",3]],[[],["midieventflags",3]],[[],["timeinfoflags",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[["channelflags",3]],[["option",4],["ordering",4]]],[[["pluginflags",3]],[["option",4],["ordering",4]]],[[["modifierkey",3]],[["option",4],["ordering",4]]],[[["midieventflags",3]],[["option",4],["ordering",4]]],[[["timeinfoflags",3]],[["option",4],["ordering",4]]],null,null,null,[[["channelflags",3]]],[[["pluginflags",3]]],[[["modifierkey",3]]],[[["midieventflags",3]]],[[["timeinfoflags",3]]],null,null,null,null,null,null,null,null,null,[[["bool",15],["channelflags",3]]],[[["bool",15],["pluginflags",3]]],[[["modifierkey",3],["bool",15]]],[[["midieventflags",3],["bool",15]]],[[["bool",15],["timeinfoflags",3]]],null,null,null,null,null,[[["channelflags",3]],["channelflags",3]],[[["pluginflags",3]],["pluginflags",3]],[[["modifierkey",3]],["modifierkey",3]],[[["midieventflags",3]],["midieventflags",3]],[[["timeinfoflags",3]],["timeinfoflags",3]],[[["channelflags",3]]],[[["pluginflags",3]]],[[["modifierkey",3]]],[[["midieventflags",3]]],[[["timeinfoflags",3]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["channelflags",3]]],[[["pluginflags",3]]],[[["modifierkey",3]]],[[["midieventflags",3]]],[[["timeinfoflags",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["inputs",3]],[[]],[[]],[[],["events",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["usize",15]],[[],["usize",15]],[[["usize",15]]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["usize",15]],[[],["usize",15]],[[["host",8],["intoiterator",8]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["intoiterator",8]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["placeholderevent",6]]],[[],["audiobufferiterator",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["speakerarrangementtype",4]],[[]],[[["channelproperties",3]],["channelinfo",3]],[[]],[[]],[[]],[[]],[[["channelproperties",3]],["speakerarrangementtype",4]],[[]],[[]],[[],["channelproperties",3]],[[]],[[]],[[]],[[]],[[],["speakerarrangementtype",4]],[[]],[[],["bool",15]],[[],["bool",15]],[[["option",4],["bool",15],["option",4],["speakerarrangementtype",4],["string",3]],["channelinfo",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["keycode",3]],[[],["knobmode",4]],[[],["key",4]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],null,[[["keycode",3]],["bool",15]],[[["keycode",3]],["bool",15]],null,[[],["bool",15]],[[]],[[["knobmode",4]],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[["isize",15]],[["result",4],["tryfromprimitiveerror",3]]],[[["isize",15]],[["result",4],["tryfromprimitiveerror",3]]],[[],["result",4]],[[],[["result",4],["tryfromprimitiveerror",3]]],[[],[["result",4],["tryfromprimitiveerror",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["event",4]],[[],["midievent",3]],[[],["sysexevent",3]],[[]],[[]],[[]],null,null,null,null,[[]],[[["event",3]],["event",4]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["placeholderevent",6]]],[[["placeholderevent",6]]],[[["placeholderevent",6]]],null,null,null,null,null,null,null,null,null,[[["i32",15],["f32",15]]],[[["i32",15]]],[[],["audiobuffer",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["cando",4]],["supported",4]],[[]],[[["i32",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["info",3]],["hostbuffer",3]],[[],["isize",15]],[[],[["option",4],["box",3]]],[[]],[[],["info",3]],[[["i32",15]],["channelinfo",3]],[[["i32",15]],["channelinfo",3]],[[],[["arc",3],["pluginparameters",8]]],[[],["i32",15]],[[],["isize",15]],[[["i32",15]],[["timeinfo",3],["option",4]]],[[]],[[]],[[],["usize",15]],[[],[["plugininstance",3],["result",4],["pluginloaderror",4]]],[[]],[[]],[[]],[[]],[[["path",3],["mutex",3],["arc",3]],[["result",4],["pluginloader",3],["pluginloaderror",4]]],[[["hostcallback",3]]],[[["usize",15]],["hostbuffer",3]],[[],["usize",15]],[[["audiobuffer",3]]],[[["events",3]]],[[["events",3]]],[[["audiobuffer",3]]],[[]],[[["i64",15]]],[[["f32",15]]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["isize",15],["i32",15],["f32",15]],["isize",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["i32",15],["f32",15]]],[[["i32",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["i32",15]],["bool",15]],[[["cando",4]],["supported",4]],null,[[["i32",15]]],[[],["category",4]],[[],["info",3]],[[],["hostcallback",3]],[[]],[[]],[[]],[[],["info",3]],[[],["hostcallback",3]],[[["i32",15]]],null,[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[["str",15]],["cando",4]],[[],[["vec",3],["u8",15]]],[[],["isize",15]],[[],[["option",4],["box",3]]],[[],["info",3]],[[]],[[["i32",15]],["channelinfo",3]],[[["i32",15]],["channelinfo",3]],[[["i32",15]],["f32",15]],[[["i32",15]],["string",3]],[[["i32",15]],["string",3]],[[],[["arc",3],["pluginparameters",8]]],[[["i32",15]],["string",3]],[[],["i32",15]],[[],[["vec",3],["u8",15]]],[[["i32",15]],["string",3]],[[],["i32",15]],[[],["isize",15]],[[["i32",15]],[["timeinfo",3],["option",4]]],[[]],[[]],null,null,[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[]],null,null,null,[[["hostcallback",3]]],null,null,null,null,[[["audiobuffer",3]]],[[["events",3]]],[[["events",3]]],[[["audiobuffer",3]]],[[],[["hostcallbackproc",6],["option",4]]],[[]],[[]],[[["i64",15]]],[[["i32",15],["f32",15]]],[[["string",3]]],[[["f32",15]]],null,[[]],[[]],[[["string",3],["i32",15]],["bool",15]],[[]],[[]],[[]],[[]],[[],["result",4]],[[["isize",15]],[["result",4],["tryfromprimitiveerror",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],[["result",4],["tryfromprimitiveerror",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],null,[[["isize",15],["i32",15],["f32",15]],["isize",15]],null,[[],["i32",15]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["parametertransfer",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["f32",15]]],[[]],[[]],[[]],[[],["f32",15]],[[["usize",15]],["f32",15]],[[]],[[]],[[]],[[]],[[["bool",15]],["parametertransferiterator",3]],[[["f32",15]],["atomicfloat",3]],[[["usize",15]]],[[],["option",4]],[[["f32",15]]],[[["usize",15],["f32",15]]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[3,"ChannelFlags"],[3,"ModifierKey"],[3,"TimeInfoFlags"],[3,"PluginFlags"],[4,"SpeakerArrangementType"],[4,"Supported"],[4,"HostLanguage"],[4,"FileSelectCommand"],[4,"EventType"],[4,"ProcessLevel"],[3,"MidiEventFlags"],[4,"FileSelectType"],[4,"SmpteFrameRate"],[3,"Event"],[3,"SysExEvent"],[3,"AEffect"],[3,"MidiEvent"],[3,"Events"],[3,"ChannelProperties"],[3,"TimeInfo"],[3,"FileType"],[3,"FileSelect"],[3,"AudioBuffer"],[3,"AudioBufferIterator"],[3,"InputIterator"],[3,"Outputs"],[3,"OutputIterator"],[3,"SendEventBuffer"],[3,"Inputs"],[8,"WriteIntoPlaceholder"],[4,"StereoConfig"],[4,"ArrangementTarget"],[4,"SpeakerArrangementType"],[4,"StereoChannel"],[4,"SurroundConfig"],[3,"ChannelInfo"],[4,"Key"],[4,"KnobMode"],[3,"KeyCode"],[8,"Editor"],[4,"Event"],[3,"MidiEvent"],[3,"SysExEvent"],[4,"PluginLoadError"],[8,"Host"],[3,"HostBuffer"],[3,"PluginLoader"],[3,"PluginInstance"],[4,"Category"],[4,"CanDo"],[3,"HostCallback"],[3,"Info"],[8,"PluginParameters"],[8,"Plugin"],[3,"AtomicFloat"],[3,"ParameterTransferIterator"],[3,"ParameterTransfer"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};